/*
 * Copyright Terracotta, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
 id 'org.ehcache.build.conventions.java-library'
}

configurations {
  modularOsgiModule
  osgiModule
  lowerBoundOsgiModule.extendsFrom osgiModule
  testCompileOnly.extendsFrom osgiModule
}

dependencies {
  api ('org.ops4j.pax.exam:pax-exam-junit4:4.13.5') {
    exclude group:'org.slf4j', module:'slf4j-api'
  }
  api 'org.apache.felix:org.apache.felix.framework:7.0.3'

  runtimeOnly ('org.ops4j.pax.exam:pax-exam-link-mvn:4.13.5') {
    exclude group:'org.slf4j', module:'slf4j-api'
  }
  runtimeOnly ("org.ops4j.pax.url:pax-url-wrap:2.6.11") {
    exclude group:'org.slf4j', module:'slf4j-api'
  }
  runtimeOnly ('org.ops4j.pax.exam:pax-exam-container-native:4.13.5') {
    exclude group:'org.slf4j', module:'slf4j-api'
  }

  modularOsgiModule project(':ehcache-api')
  modularOsgiModule project(':ehcache-core')
  modularOsgiModule project(':ehcache-impl')
  modularOsgiModule project(':ehcache-xml')
  modularOsgiModule project(':ehcache-107')

  osgiModule project(':ehcache-transactions')
  osgiModule "javax.cache:cache-api:$parent.jcacheVersion"
  osgiModule ('org.codehaus.btm:btm:2.1.4') {
    exclude group:'org.slf4j', module:'slf4j-api'
  }

  osgiModule project(':ehcache')

  osgiModule "org.slf4j:slf4j-simple:$parent.slf4jVersion"
  osgiModule 'org.apache.felix:org.apache.felix.scr:2.2.0'

  osgiModule 'com.sun.activation:javax.activation:1.2.0'
  osgiModule 'org.osgi:org.osgi.util.promise:1.2.0'
  osgiModule 'org.glassfish.hk2:osgi-resource-locator:2.4.0'
}

configurations.all {
  resolutionStrategy {
    dependencySubstitution {
      substitute(module('org.ops4j.base:ops4j-base-store:1.5.0'))
        .using(module('org.ops4j.base:ops4j-base-store:1.5.1'))
        .because('Dependency divergence in org.ops4j.pax.exam:pax-exam-spi:4.13.5')
      substitute(module('junit:junit:4.12'))
        .using(module('junit:junit:4.13.1'))
        .because('CVE-2020-15250')
      substitute(module('org.ops4j.pax.url:pax-url-classpath:2.6.8'))
        .using(module('org.ops4j.pax.url:pax-url-classpath:2.6.11'))
      substitute(module('org.ops4j.pax.url:pax-url-link:2.6.8'))
        .using(module('org.ops4j.pax.url:pax-url-link:2.6.11'))
      substitute(module('org.osgi:org.osgi.util.function:1.1.0'))
        .using(module('org.osgi:org.osgi.util.function:1.2.0'))
        .because('Dependency divergence in org.osgi:org.osgi.util.promise:1.2.0')
      substitute(module('biz.aQute.bnd:bndlib:2.4.0'))
        .using(module('biz.aQute.bnd:biz.aQute.bndlib:6.1.0'))
    }
  }
}

sourceSets {
  test {
    // Needed to allow PaxExam to see the test resources
    output.resourcesDir = java.classesDirectory
  }
}

if (testJava.javaVersion.isJava9Compatible()) {
  tasks.withType(Test) {
    //https://issues.apache.org/jira/browse/FELIX-5727 - framework extensions in Java 9 are ugly
    jvmArgs += '--add-opens=java.base/jdk.internal.loader=ALL-UNNAMED'
  }
}

test {
  dependsOn configurations.osgiModule, configurations.modularOsgiModule
  doFirst {
    [configurations.modularOsgiModule, configurations.osgiModule]*.resolvedConfiguration*.resolvedArtifacts*.forEach({
      systemProperty "$it.moduleVersion.id.module:osgi-path", it.file
    })
  }
}

configurations {
  lowerBoundOsgiModule {
    resolutionStrategy.dependencySubstitution {
      substitute module('org.glassfish.jaxb:jaxb-runtime') with module('com.sun.xml.bind:jaxb-osgi:2.2.8-b01')
    }
  }
}
dependencies {
  lowerBoundOsgiModule 'javax.xml.bind:jaxb-api:2.2.9'
}

tasks.register('lowerBoundTest', Test) { test ->
  group = JavaBasePlugin.VERIFICATION_GROUP
  dependsOn configurations.lowerBoundOsgiModule, configurations.modularOsgiModule
  doFirst {
    [configurations.modularOsgiModule, configurations.lowerBoundOsgiModule]*.resolvedConfiguration*.resolvedArtifacts*.forEach {
      systemProperty "$it.moduleVersion.id.module:osgi-path", it.file
    }
  }
}

tasks.named('check') {
  dependsOn tasks.lowerBoundTest
}

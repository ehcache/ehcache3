<?xml version="1.0"?>
<!--
  ~ Copyright Terracotta, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xs:schema version="1.0" xmlns:ehcache="http://www.ehcache.org/v3" xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified" targetNamespace="http://www.ehcache.org/v3">
  <xs:element name="config" type="ehcache:config-type"/>

  <xs:complexType name="config-type">
    <xs:sequence>
      <xs:element name="service" type="ehcache:service-type" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Placeholder for services to be managed by the CacheManager and exposed to the Cache instances it manages.
            Those services will also be lifecycled by the CacheManager.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="cache" type="ehcache:cache-type">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              A cache definition the CacheManager will manage
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="cache-template" type="ehcache:cacheTemplate-type">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              A cache template definition that can be reference in &lt;cache&gt; definitions using the 'usesTemplate'
              attribute.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="service-type">
    <xs:choice>
      <xs:element name="default-serializers" type="ehcache:serializer-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="persistence" type="ehcache:persistence-type" minOccurs="0" maxOccurs="1"/>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="1"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="persistence-type">
    <xs:sequence>
      <xs:element name="directory" type="xs:string" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serializer-type">
    <xs:sequence>
      <xs:element name="serializer" maxOccurs="unbounded" minOccurs="0">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute type="xs:string" name="type" use="required"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
     </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="cache-type">
    <xs:complexContent>
      <xs:extension base="ehcache:baseCache-type">
        <xs:attribute name="alias" use="required" type="xs:string">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              The alias used to access this Cache from the CacheManager
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="usesTemplate" use="optional" type="xs:IDREF">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              The optional &lt;cache-template&gt; to use to source a default configuration from.
              References the cache template's 'name' attribute.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="cacheTemplate-type">
    <xs:complexContent>
      <xs:extension base="ehcache:baseCache-type">
        <xs:attribute name="name" type="xs:ID" use="required">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              The name of this &lt;cache-template&gt; definition.
              Used by cache element's 'usesTemplate' attribute.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="baseCache-type" abstract="true">
    <xs:sequence>
      <xs:element name="key-type" type="ehcache:cache-entry-type" minOccurs="0" maxOccurs="1" default="java.lang.Object">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Defines the type for the keys &lt;K&gt; of the Cache&lt;K, V&gt;. Takes a fully qualified class name.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="value-type" type="ehcache:cache-entry-type" minOccurs="0" maxOccurs="1" default="java.lang.Object">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Defines the type for the values &lt;V&gt; of the Cache&lt;K, V&gt;. Takes a fully qualified class name.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="expiry" type="ehcache:expiry-type" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Defines expiry for the Cache.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="eviction-veto" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            A fully qualified class name to a concrete type that implements
            org.ehcache.config.EvictionVeto and has a public default no argument constructor.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="eviction-prioritizer" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            A fully qualified class name to a concrete type that implements
            org.ehcache.config.EvictionPrioritizer and has a public default no argument constructor.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="integration" type="ehcache:cache-integration" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Configures the Cache as fronting a system of record that it'll be kept in sync with.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:element name="heap" type="ehcache:resource-type" minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              Shortcut for configuring a heap-only Cache.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="resources" type="ehcache:resources-type" minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              Configures the Cache resources.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="storeByValueOnHeap" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          Specifies whether the heap tier for this cache should store by value, if true; or by reference (default, false)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="cache-integration">
    <xs:sequence>
      <xs:element name="loaderwriter" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="class" type="xs:string" minOccurs="1" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  A fully qualified class name to a concrete type that implements
                  org.ehcache.spi.loaderwriter.CacheLoaderWriter and has a public
                  default no argument constructor.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="writebehind" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
           <xs:element name="writedelay" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:string">
                  <xs:attribute type="xs:positiveInteger" name="min" default="1" use="optional"/>
                  <xs:attribute type="xs:positiveInteger" name="max" default="1" use="optional"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:element type="xs:nonNegativeInteger" name="ratelimitpersecond" default="0" minOccurs="0" maxOccurs="1"/>
          <xs:element type="xs:positiveInteger" name="batchsize" default="1" minOccurs="0" maxOccurs="1"/>
          <xs:element name="retryAttempts" default="0" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:nonNegativeInteger">
                  <xs:attribute type="xs:positiveInteger" name="delay" default="1" use="optional"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:positiveInteger" name="concurrency" default="1" use="optional"/>
        <xs:attribute type="xs:nonNegativeInteger" name="size" default="0" use="optional"/>
        <xs:attribute type="xs:boolean" name="coalesce" use="optional"/>
      </xs:complexType>
    </xs:element>
      <xs:element name="listener" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="class" type="xs:string" minOccurs="1" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  A fully qualified class name to a concrete type that implements
                  org.ehcache.spi.event.CacheEventListener and has a public
                  default no argument constructor.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="eventFiringMode" type="ehcache:eventFiring-type" minOccurs="1" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  Indicates which EventFiring firing mode to use
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="eventOrderingMode" type="ehcache:eventOrdering-type" minOccurs="1" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  Indicates which EventOrdering ordering mode to use
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="eventsToFireOn" type="ehcache:event-type" minOccurs="1" maxOccurs="5">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  Indicates on which EventType an event has to be fired
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="cache-entry-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="serializer" type="xs:string">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              A fully qualified class name of the type's serializer class.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="expiry-type">
    <xs:choice>
      <xs:element name="class" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            A fully qualified class name to a concrete type that implements
            org.ehcache.expiry.Expiry and has a public default no argument constructor.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tti" type="ehcache:time-type">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Entries in the cache should expire if not accessed for the defined time.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ttl" type="ehcache:time-type">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Entries in the cache should expire after the defined time.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="none">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Entries in the cache should never expire.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType/>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="time-type">
    <xs:simpleContent>
      <xs:extension base="xs:positiveInteger">
        <xs:attribute name="unit" type="ehcache:time-unit" default="seconds">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              The time unit (see java.util.concurrent.TimeUnit) this value is expressed in.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="resource-type">
    <xs:attribute name="unit" type="ehcache:resource-unit" default="entries" use="optional"/>
    <xs:attribute name="size" use="required" type="xs:positiveInteger"/>
  </xs:complexType>

  <xs:complexType name="persistable-resource-type">
    <xs:complexContent>
      <xs:extension base="ehcache:resource-type">
        <xs:attribute name="persistent" type="xs:boolean" default="false" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="resources-type">
    <xs:sequence>
      <xs:element name="heap" type="ehcache:resource-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="offheap" type="ehcache:resource-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="disk" type="ehcache:persistable-resource-type" minOccurs="0" maxOccurs="1"/>
      <xs:any namespace="##other" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="time-unit">
    <xs:restriction base="xs:string">
      <xs:enumeration value="nanos"/>
      <xs:enumeration value="micros"/>
      <xs:enumeration value="millis"/>
      <xs:enumeration value="seconds"/>
      <xs:enumeration value="minutes"/>
      <xs:enumeration value="hours"/>
      <xs:enumeration value="days"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="resource-unit">
    <xs:restriction base="xs:string">
      <xs:enumeration value="entries"/>
      <xs:enumeration value="b"/>
      <xs:enumeration value="kb"/>
      <xs:enumeration value="mb"/>
      <xs:enumeration value="gb"/>
      <xs:enumeration value="tb"/>
      <xs:enumeration value="pb"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="eventFiring-type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ASYNCHRONOUS" />
      <xs:enumeration value="SYNCHRONOUS" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="eventOrdering-type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNORDERED" />
      <xs:enumeration value="ORDERED" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="event-type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="EVICTED" />
      <xs:enumeration value="EXPIRED" />
      <xs:enumeration value="REMOVED" />
      <xs:enumeration value="CREATED" />
      <xs:enumeration value="UPDATED" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

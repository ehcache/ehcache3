/*
 * Copyright Terracotta, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'org.ehcache.build.conventions.java'
}

configurations {
  modularOsgiModule
  osgiModule
  lowerBoundOsgiModule.extendsFrom osgiModule
  testCompileOnly.extendsFrom osgiModule
}

dependencies {
  modularOsgiModule project(':ehcache-api')
  modularOsgiModule project(':ehcache-core')
  modularOsgiModule project(':ehcache-impl')
  modularOsgiModule project(':ehcache-xml')

  osgiModule project(':ehcache')
  osgiModule project(':clustered:ehcache-clustered')
  osgiModule "javax.cache:cache-api:$parent.jcacheVersion"
  osgiModule "org.slf4j:slf4j-simple:$parent.slf4jVersion"
  osgiModule "org.terracotta:terracotta-utilities-test-tools:$terracottaUtilitiesVersion"
  osgiModule "org.terracotta:terracotta-utilities-port-chooser:$terracottaUtilitiesVersion"
  osgiModule 'org.apache.felix:org.apache.felix.scr:2.1.6'
  osgiModule 'com.sun.activation:javax.activation:1.2.0'
  osgiModule 'org.glassfish.hk2:osgi-resource-locator:1.0.2'

  testImplementation project(':osgi-test')
  testImplementation 'org.osgi:osgi.core:6.0.0'
}

configurations.all {
  resolutionStrategy {
    dependencySubstitution {
      substitute(module('org.ops4j.pax.url:pax-url-aether:2.4.5'))
        .because('https://github.com/codehaus-plexus/plexus-utils/issues/3' +
          ' and https://github.com/codehaus-plexus/plexus-utils/issues/4')
        .with(module('org.ops4j.pax.url:pax-url-aether:2.6.3'))
      substitute(module('org.ops4j.pax.url:pax-url-classpath:2.4.5'))
        .because('https://ops4j1.jira.com/browse/PAXURL-341')
        .with(module('org.ops4j.pax.url:pax-url-classpath:2.6.1'))
      substitute(module('org.ops4j.pax.url:pax-url-link:2.4.5'))
        .because('https://ops4j1.jira.com/browse/PAXURL-341')
        .with(module('org.ops4j.pax.url:pax-url-link:2.6.1'))

      substitute(module('biz.aQute.bnd:bndlib:2.4.0'))
        .because('Java 9 Stuff')
        .with(module('biz.aQute.bnd:biz.aQute.bndlib:5.2.0'))
      substitute(module('junit:junit:4.12'))
        .because('CVE-2020-15250')
        .with(module('junit:junit:4.13.1'))
    }
  }
}

sourceSets {
  test {
    // Needed for PaxExam which makes the dynamic bundle load content of a single dir
    // matching the package of the test class
    output.resourcesDir = java.outputDir
  }
}

task unzipKit(type: Sync) {
  dependsOn project(':clustered:ehcache-clustered').distZip
  from zipTree(project(':clustered:ehcache-clustered').distZip.archivePath)
  into 'build/ehcache-kit'
}

tasks.withType(Test) {
  dependsOn unzipKit
  systemProperty 'kitInstallationPath', "$unzipKit.destinationDir/${project(':clustered:ehcache-clustered').archivesBaseName}-$project.version-kit"
}

test {
  dependsOn configurations.osgiModule, configurations.modularOsgiModule
  doFirst {
    [configurations.modularOsgiModule, configurations.osgiModule]*.resolvedConfiguration*.resolvedArtifacts*.forEach({
      systemProperty "$it.moduleVersion.id.module:osgi-path", it.file
    })
  }
}

configurations {
  lowerBoundOsgiModule {
    resolutionStrategy.dependencySubstitution {
      substitute module('org.glassfish.jaxb:jaxb-runtime') with module('com.sun.xml.bind:jaxb-osgi:2.2.8-b01')
    }
  }
}
dependencies {
  lowerBoundOsgiModule 'javax.xml.bind:jaxb-api:2.2.9'
}

tasks.register('lowerBoundTest', Test) {
  group = JavaBasePlugin.VERIFICATION_GROUP
  dependsOn configurations.lowerBoundOsgiModule, configurations.modularOsgiModule
  doFirst {
    [configurations.modularOsgiModule, configurations.lowerBoundOsgiModule]*.resolvedConfiguration*.resolvedArtifacts*.forEach({
      systemProperty "$it.moduleVersion.id.module:osgi-path", it.file
    })
  }
}

tasks.named('check') {
  dependsOn tasks.lowerBoundTest
}

/*
 * Copyright Terracotta, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configurations {
  osgiModule
  testCompileOnly.extendsFrom osgiModule
}

dependencies {
  osgiModule project(':api')
  osgiModule project(':core')
  osgiModule project(':impl')
  osgiModule project(':xml')

  osgiModule project(':dist')
  osgiModule project(':clustered:clustered-dist')
  osgiModule "javax.cache:cache-api:$parent.jcacheVersion"
  osgiModule "org.slf4j:slf4j-simple:$parent.slf4jVersion"
  osgiModule "org.terracotta:terracotta-utilities-test-tools:$terracottaUtilitiesVersion"
  osgiModule 'org.apache.felix:org.apache.felix.scr:2.1.6'
  osgiModule 'com.sun.activation:javax.activation:1.2.0'
  osgiModule 'org.glassfish.hk2:osgi-resource-locator:1.0.2'

  //IDEs cannot handle the :dist or :clustered:clustered-dist dependencies
  testCompileOnly project(':clustered:client')
  testCompileOnly project(':clustered:common')

  testImplementation 'org.apache.felix:org.apache.felix.framework:6.0.3'
  testImplementation ('org.ops4j.pax.exam:pax-exam-junit4:4.12.0') {
    exclude group:'org.slf4j', module:'slf4j-api'
  }

  testRuntimeOnly ('org.ops4j.pax.exam:pax-exam-container-native:4.12.0') {
    exclude group:'org.slf4j', module:'slf4j-api'
  }
  testRuntimeOnly ('org.ops4j.pax.exam:pax-exam-link-mvn:4.12.0') {
    exclude group:'org.slf4j', module:'slf4j-api'
  }
  testRuntimeOnly ("org.ops4j.pax.url:pax-url-wrap:2.6.1") {
    exclude group:'org.slf4j', module:'slf4j-api'
  }

}

configurations.all {
  resolutionStrategy {
    dependencySubstitution {
      substitute(module('org.ops4j.pax.url:pax-url-aether:2.4.5'))
        .because('https://ops4j1.jira.com/browse/PAXURL-341')
        .with(module('org.ops4j.pax.url:pax-url-aether:2.6.1'))
      substitute(module('org.ops4j.pax.url:pax-url-classpath:2.4.5'))
        .because('https://ops4j1.jira.com/browse/PAXURL-341')
        .with(module('org.ops4j.pax.url:pax-url-classpath:2.6.1'))
      substitute(module('org.ops4j.pax.url:pax-url-link:2.4.5'))
        .because('https://ops4j1.jira.com/browse/PAXURL-341')
        .with(module('org.ops4j.pax.url:pax-url-link:2.6.1'))
    }
  }
}

sourceSets {
  test {
    // Needed for PaxExam which makes the dynamic bundle load content of a single dir
    // matching the package of the test class
    output.resourcesDir = java.outputDir
  }
}

configurations.osgiModule.dependencies.withType(ProjectDependency).forEach {
  test.dependsOn it.dependencyProject.tasks.jar
}

task unzipKit(type: Copy) {
  dependsOn project(':clustered:clustered-dist').distZip
  from zipTree(project(':clustered:clustered-dist').distZip.archivePath)
  into 'build/ehcache-kit'
}

test {
  dependsOn unzipKit
  systemProperty 'kitInstallationPath', "$unzipKit.destinationDir/${project(':clustered:clustered-dist').archivesBaseName}-$project.version-kit"
}.doFirst {
  configurations.osgiModule.resolvedConfiguration.resolvedArtifacts.forEach({
    systemProperty "$it.moduleVersion.id.module:osgi-path", it.file
  })
}

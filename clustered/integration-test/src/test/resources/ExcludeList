# This is a dummy test that fails if not in the exclude list.
org.jsr107.tck.CachingTest#dummyTest

# Hard assertions on the default URI
org.jsr107.tck.CachingTest#getCacheManager_defaultURI
org.jsr107.tck.CachingTest#getCacheManager_nullUriParameter
org.jsr107.tck.CachingTest#getCacheManager_URI
org.jsr107.tck.spi.CachingProviderClassLoaderTest#getCacheManagerSameURI
org.jsr107.tck.spi.CachingProviderClassLoaderTest#getCacheManagerDefaultURI
org.jsr107.tck.spi.CachingProviderTest#getCacheManagerUsingDefaultURI

# Assumes store-by-reference semantics
org.jsr107.tck.StoreByReferenceTest#get_Existing
org.jsr107.tck.StoreByReferenceTest#get_Existing_NotSameKey
org.jsr107.tck.StoreByReferenceTest#put_Existing_NotSameKey
org.jsr107.tck.StoreByReferenceTest#getAndPut_NotThere
org.jsr107.tck.StoreByReferenceTest#getAndPut_Existing
org.jsr107.tck.StoreByReferenceTest#getAndPut_Existing_NotSameKey
org.jsr107.tck.StoreByReferenceTest#putAll
org.jsr107.tck.StoreByReferenceTest#putIfAbsent_Missing
org.jsr107.tck.StoreByReferenceTest#putIfAbsent_There
org.jsr107.tck.StoreByReferenceTest#replace_3arg
org.jsr107.tck.StoreByReferenceTest#getAndReplace
org.jsr107.tck.TypesTest#simpleAPINoGenericsAndNoTypeEnforcementStoreByReference

# Assumes inline expiry policy calls
org.jsr107.tck.management.CacheMBStatisticsBeanTest#testExpiryOnCreation
org.jsr107.tck.expiry.CacheExpiryTest#putShouldCallGetExpiry
org.jsr107.tck.expiry.CacheExpiryTest#getAndReplaceShouldCallGetExpiryForModifiedEntry
org.jsr107.tck.expiry.CacheExpiryTest#containsKeyShouldNotCallExpiryPolicyMethods
org.jsr107.tck.expiry.CacheExpiryTest#removeEntryShouldNotCallExpiryPolicyMethods
org.jsr107.tck.expiry.CacheExpiryTest#putIfAbsentShouldCallGetExpiry
org.jsr107.tck.expiry.CacheExpiryTest#replaceSpecificShouldCallGetExpiry
org.jsr107.tck.expiry.CacheExpiryTest#getAllShouldCallGetExpiryForAccessedEntry
org.jsr107.tck.expiry.CacheExpiryTest#removeSpecifiedEntryShouldNotCallExpiryPolicyMethods
org.jsr107.tck.expiry.CacheExpiryTest#replaceShouldCallGetExpiryForModifiedEntry
org.jsr107.tck.expiry.CacheExpiryTest#putAllShouldCallGetExpiry
org.jsr107.tck.expiry.CacheExpiryTest#invokeAllSetValueShouldCallGetExpiry
org.jsr107.tck.expiry.CacheExpiryTest#iteratorNextShouldCallGetExpiryForAccessedEntry
org.jsr107.tck.expiry.CacheExpiryTest#getShouldCallGetExpiryForAccessedEntry
org.jsr107.tck.expiry.CacheExpiryTest#invokeAllReadThroughEnabledGetOnNonExistentEntry
org.jsr107.tck.expiry.CacheExpiryTest#expire_whenCreated_ModifiedExpiryPolicy
org.jsr107.tck.expiry.CacheExpiryTest#expire_whenCreated_ParameterizedExpiryPolicy
org.jsr107.tck.expiry.CacheExpiryTest#expire_whenCreated_TouchedExpiryPolicy
org.jsr107.tck.expiry.CacheExpiryTest#expire_whenCreated_CreatedExpiryPolicy
org.jsr107.tck.expiry.CacheExpiryTest#expire_whenCreated_AccessedExpiryPolicy
org.jsr107.tck.expiry.CacheExpiryTest#getAndRemoveShouldNotCallExpiryPolicyMethods
org.jsr107.tck.expiry.CacheExpiryTest#getAndPutShouldCallEitherCreatedOrModifiedExpiryPolicy

# Clustered cache TTI is busted(-ish)
org.jsr107.tck.integration.CacheLoaderWithExpiryTest#shouldLoadWhenMissCausedByExpiry
org.jsr107.tck.expiry.CacheExpiryTest#expire_whenAccessed

# Implement org.ehcache.clustered.client.internal.store.ClusteredStore.computeAndGet
org.jsr107.tck.event.CacheListenerTest#testBrokenCacheEntryListener
org.jsr107.tck.event.CacheListenerTest#testCacheEntryListener
org.jsr107.tck.management.CacheMBStatisticsBeanTest#testCacheStatisticsInvokeEntryProcessorRemove
org.jsr107.tck.management.CacheMBStatisticsBeanTest#testCacheStatisticsInvokeEntryProcessorUpdate
org.jsr107.tck.management.CacheMBStatisticsBeanTest#testCacheStatisticsInvokeEntryProcessorGet
org.jsr107.tck.management.CacheMBStatisticsBeanTest#testCacheStatisticsInvokeEntryProcessorNoOp
org.jsr107.tck.processor.CacheInvokeTest#removeMissing
org.jsr107.tck.processor.CacheInvokeTest#noValueException
org.jsr107.tck.processor.CacheInvokeTest#testProcessorEmptyExceptionIsWrapped
org.jsr107.tck.processor.CacheInvokeTest#varArgumentsPassedIn
org.jsr107.tck.processor.CacheInvokeTest#removeException
org.jsr107.tck.processor.CacheInvokeTest#noValueSetValue
org.jsr107.tck.processor.CacheInvokeTest#noValueNoMutation
org.jsr107.tck.processor.CacheInvokeTest#testProcessorExceptionIsWrapped
org.jsr107.tck.processor.CacheInvokeTest#setValueToNull
org.jsr107.tck.processor.CacheInvokeTest#removeExisting
org.jsr107.tck.processor.CacheInvokeTest#existingException
org.jsr107.tck.processor.CacheInvokeTest#invokeAllgetResultFromMap
org.jsr107.tck.processor.CacheInvokeTest#existingReplace
org.jsr107.tck.processor.CacheInvokeTest#nullGetValue
org.jsr107.tck.expiry.CacheExpiryTest#invokeSetValueShouldCallGetExpiry
org.jsr107.tck.expiry.CacheExpiryTest#invokeGetValueShouldCallGetExpiry
org.jsr107.tck.expiry.CacheExpiryTest#invokeMultiSetValueShouldCallGetExpiry
org.jsr107.tck.expiry.CacheExpiryTest#invokeGetValueWithReadThroughForNonExistentEntryShouldCallGetExpiryForCreatedEntry
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvoke_setValue_CreateEntryThenRemove
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvoke_remove
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvoke_setValue_CreateEntryGetValue
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvoke_setValue_UpdateEntry
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvoke_remove_createEntry
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvoke_setValue_CreateEntry
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvoke_remove_nonExistingEntry
org.jsr107.tck.integration.CacheLoaderWithoutReadThroughTest#shouldLoadWhenAccessingWithEntryProcessor
org.jsr107.tck.integration.CacheLoaderTest#shouldLoadWhenAccessingWithEntryProcessor
org.jsr107.tck.integration.CacheLoaderWriterTest#shouldLoadWhenAccessingWithEntryProcessor
org.jsr107.tck.processor.CacheInvokeTest#invokeAllEntryProcessorReturnsNullResult
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvokeAll_setValue_UpdateEntry
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvokeAll_setValue_CreateEntry
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughUsingInvokeAll_setValue_RemoveEntry

# Implement org.ehcache.clustered.client.internal.store.ClusteredStore.bulkComputeIfAbsent
org.jsr107.tck.integration.CacheLoaderTest#shouldNotLoadMultipleNullEntriesUsingLoadAll
org.jsr107.tck.integration.CacheLoaderTest#shouldNotLoadMultipleNullValuesUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWithoutReadThroughTest#shouldLoadMultipleNonExistingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWithoutReadThroughTest#shouldNotLoadMultipleNullEntriesUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWithoutReadThroughTest#shouldNotLoadMultipleNullValuesUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWithoutReadThroughTest#shouldLoadSingleMissingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderTest#shouldLoadMultipleNonExistingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderTest#shouldLoadSingleMissingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWriterTest#shouldLoadSingleMissingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWriterTest#shouldLoadMultipleNonExistingEntryUsingLoadAll
org.jsr107.tck.expiry.CacheExpiryTest#loadAllWithReadThroughEnabledShouldCallGetExpiryForCreatedEntry

# Implement org.ehcache.clustered.client.internal.store.ClusteredStore.bulkCompute
org.jsr107.tck.integration.CacheLoaderWithoutReadThroughTest#shouldLoadSingleExistingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWithoutReadThroughTest#shouldLoadMultipleExistingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderTest#shouldLoadSingleExistingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWriterTest#shouldNotWriteThroughUsingLoadAll
org.jsr107.tck.integration.CacheLoaderTest#shouldLoadMultipleExistingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWriterTest#shouldLoadMultipleExistingEntryUsingLoadAll
org.jsr107.tck.integration.CacheLoaderWriterTest#shouldLoadSingleExistingEntryUsingLoadAll

# Clustered removeAll/putAll incorrectly terminates early when hitting an exception on a key
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughRemoveAllSpecific_partialSuccess
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThroughRemoveAll_partialSuccess
org.jsr107.tck.integration.CacheWriterTest#shouldWriteThoughUsingPutAll_partialSuccess

/*
 * Copyright Terracotta, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
  testCompile project(':dist')
  testCompile project(':clustered:clustered-dist')
  testCompile project(':management')
  testCompile "org.terracotta.management:management-entity-client:$parent.managementVersion"

  testCompile group:'org.terracotta', name:'galvan-support', version: galvanVersion
  testCompile (group:'com.google.code.tempus-fugit', name:'tempus-fugit', version:'1.1') {
    exclude group:'junit', module:'junit'
    exclude group:'org.hamcrest', module:'hamcrest-core'
  }
  testCompile group: 'javax.cache', name: 'cache-api', version: jcacheVersion

  testCompile "org.terracotta.management:management-entity-server:$parent.managementVersion:plugin"
  testCompile "org.terracotta.management:monitoring-service:$parent.managementVersion:plugin"
  testCompile "org.terracotta.management:monitoring-service-entity:$parent.managementVersion:plugin"
}

task unzipKit(type: Copy) {
  dependsOn project(':clustered:clustered-dist').distZip
  from zipTree(project(':clustered:clustered-dist').distZip.archivePath)
  into 'build/ehcache-kit'
}

def java8 = {
  JavaVersion.current().isJava8Compatible()
}

compileTestJava {
  options.fork = true;
  options.forkOptions.executable = MavenToolchain.javaExecutable(JavaVersion.VERSION_1_8, 'javac')
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

checkstyle {
  toolVersion = '5.9'
}

test {
  dependsOn unzipKit
  executable = MavenToolchain.javaExecutable(JavaVersion.VERSION_1_8, 'java')
  environment 'JAVA_HOME', MavenToolchain.javaHome(JavaVersion.VERSION_1_8)
  // If you want to see all mutations of the voltron monitoring tree, add to JAVA_OPTS: -Dorg.terracotta.management.service.monitoring.VoltronMonitoringService.DEBUG=true
  environment 'JAVA_OPTS', '-Dcom.tc.l2.lockmanager.greedy.locks.enabled=false'
  //If this directory does not exist, tests will fail with a cryptic assert failure
  systemProperty 'kitInstallationPath', "$unzipKit.destinationDir/${project(':clustered:clustered-dist').archivesBaseName}-$project.version-kit"
  systemProperty 'managementPlugins', ["management-model", "management-registry", "sequence-generator", "management-entity-server", "monitoring-service", "monitoring-service-entity"].collect { String artifact -> project.configurations.testCompile.find { it.name.startsWith("$artifact-$parent.managementVersion") } }.join(File.pathSeparator)
  // Uncomment to include client logging in console output
  // testLogging.showStandardStreams = true
}

